scalar PetType

# enum PetType {
#   DOG
#   CAT
#   RABBIT
#   BIRD
# }

interface  Pet {
  id: Int!
  name: String!
  type: PetType!
}

type Bird implements Pet {
  id: Int!
  name: String!
  type: PetType!
  hasWings: Boolean
}

type Dog implements Pet {
  id: Int!
  name: String!
  type: PetType!
}

union SearchResult = Bird | Dog 

extend type Query {
  pets: [Pet]
  searchPets(name: String): [SearchResult]
}

extend type Mutation {
  createPet(name: String, type: PetType): Boolean
}
